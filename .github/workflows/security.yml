name: 🕵️ Security Analysis

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master]

jobs:
  secret-detection:
    name: 🔍 Secret Detection
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🕵️ TruffleHog OSS Secret Scanning
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD
          extra_args: --debug --only-verified
        continue-on-error: true # Don't fail the build

      - name: 🔍 Basic Secret Pattern Detection
        run: |
          echo "🔍 Scanning for common secret patterns..."

          # Check for common secret patterns
          echo "Checking for API keys..."
          grep -r -i "api[_-]key\s*[:=]\s*['\"][^'\"]\{10,\}" . --exclude-dir=.git --exclude-dir=node_modules || echo "No API keys found"

          echo "Checking for tokens..."
          grep -r -i "token\s*[:=]\s*['\"][^'\"]\{20,\}" . --exclude-dir=.git --exclude-dir=node_modules || echo "No tokens found"

          echo "Checking for passwords..."
          grep -r -i "password\s*[:=]\s*['\"][^'\"]\{8,\}" . --exclude-dir=.git --exclude-dir=node_modules || echo "No passwords found"

          echo "✅ Basic secret scan completed"
        continue-on-error: true

  security-analysis:
    name: 🚨 Security Analysis
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.5"

      - name: 📦 Download dependencies
        run: go mod download

      - name: 🔐 Security Analysis with go vet
        run: |
          echo "🔍 Running security analysis..."
          
          # Run go vet for basic issues
          go vet ./...
          
          # Additional security checks
          echo "Checking for unsafe package usage..."
          grep -r "unsafe\." . --include="*.go" || echo "✅ No unsafe package usage found"
          
          echo "Checking for CGO usage..."
          grep -r "import \"C\"" . --include="*.go" || echo "✅ No CGO usage found"
          
          echo "✅ Security analysis completed"
        continue-on-error: true

      - name: 🔍 Check for hardcoded secrets in Go code
        run: |
          echo "🔍 Checking for hardcoded secrets in Go files..."

          # Check for potential hardcoded secrets in Go files
          find . -name "*.go" -type f ! -path "./.git/*" -exec grep -H -n -E "(password|secret|key|token|api_key|private_key)\s*[:=]\s*[\"']" {} \; || echo "✅ No obvious hardcoded secrets found"

          # Check for long string literals that might be secrets
          find . -name "*.go" -type f ! -path "./.git/*" -exec grep -H -n -E "[\"'][A-Za-z0-9+/]{32,}[\"']" {} \; || echo "✅ No suspicious long strings found"
        continue-on-error: true
