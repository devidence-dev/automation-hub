name: 🚀 CI/CD Pipeline

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master]

jobs:
  # 🔍 Code Quality & Security Analysis
  code-quality:
    name: 🔍 Code Quality & Security
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0 # Full history for better analysis

      - name: 🔧 Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.5"
          cache: true

      - name: 📦 Download dependencies
        run: go mod download

      - name: 🔍 Run go vet
        run: go vet ./...

      - name: 🧪 Run tests with coverage
        run: |
          go test -v -race -coverprofile=coverage.out ./...
          go tool cover -html=coverage.out -o coverage.html

      - name: 📊 Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          file: ./coverage.out
          flags: unittests
          name: codecov-umbrella

      - name: 🔐 Basic Security Checks
        run: |
          echo "🔍 Running basic security checks..."

          # Check for potential issues with go vet
          go vet ./...

          # Check for common security patterns
          echo "Checking for SQL injection patterns..."
          grep -r "fmt\.Sprintf.*%" . --include="*.go" | grep -i "select\|insert\|update\|delete" || echo "No obvious SQL injection patterns found"

          echo "Checking for potential command injection..."
          grep -r "exec\.Command\|os\.system" . --include="*.go" || echo "No obvious command injection patterns found"

          echo "✅ Basic security checks completed"
        continue-on-error: true # Don't fail the build

  # 🕵️ Secret Detection
  secret-detection:
    name: 🕵️ Secret Detection
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: 🔍 TruffleHog OSS
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD
          extra_args: --debug --only-verified

  # 🧹 Code Linting
  lint:
    name: 🧹 Lint Code
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v5

      - name: 🔧 Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.5"

      - name: 🧹 golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.3.1
          args: >-
            --timeout=5m
            --enable=errcheck,govet,staticcheck,unused,misspell,gosec
            --issues-exit-code=0

  # 🐳 Docker Build & Security Scan
  docker-security:
    name: 🐳 Docker Security
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v5

      - name: 🔧 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🏗️ Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./deployments/docker/Dockerfile
          push: false
          tags: automation-hub:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: 🔍 Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "automation-hub:test"
          format: "table"
          exit-code: "0"
        continue-on-error: true

  # ✅ Build Verification
  build:
    name: ✅ Build Verification
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux]
        goarch: [arm64]

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v5

      - name: 🔧 Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.5"

      - name: 📦 Download dependencies
        run: go mod download

      - name: 🏗️ Build for ${{ matrix.goos }}/${{ matrix.goarch }}
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          go build -v -o automation-hub-${{ matrix.goos }}-${{ matrix.goarch }} ./cmd/automation-hub

      - name: 📤 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: automation-hub-${{ matrix.goos }}-${{ matrix.goarch }}
          path: automation-hub-${{ matrix.goos }}-${{ matrix.goarch }}
